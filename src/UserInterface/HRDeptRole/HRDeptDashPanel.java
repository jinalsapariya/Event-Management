/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.HRDeptRole;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Organization.HRDeptOrganization;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.WorkRequest;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import Business.WorkQueue.HRDeptWorkRequest;
import java.awt.CardLayout;
import Business.Network.Network;
import Business.Enterprise.EventPlannerEnterprise;
import Business.Organization.BudgetingDeptOrganization;
import javax.swing.JOptionPane;



/**
 *
 * @author jay_c
 */
public class HRDeptDashPanel extends javax.swing.JPanel {

    /**
     * Creates new form HRDeptDashPanel
     */
    private JPanel userProcessContainer;
    private UserAccount userAccount;
    private Enterprise enterprise;
    private Organization organization;
    private EcoSystem business;
    public HRDeptDashPanel(JPanel userProcessContainer, UserAccount account, HRDeptOrganization organization, Enterprise enterprise, EcoSystem business) {
        initComponents();
        this.userAccount= account;
        this.userProcessContainer= userProcessContainer;
        this.business=business;
        this.organization= organization;
        this.enterprise=enterprise;
        valueLabel.setText(enterprise.getName());
        jLabel3.setText(userAccount.getUsername());
        populateRequestTable();
        populateApprovedRequestTable();
        populateRejectRequestTable();
        
            
    }
    public void populateRequestTable() {
        DefaultTableModel model = (DefaultTableModel) WorkQueueTable.getModel();
        model.setRowCount(0);
        for (WorkRequest request : userAccount.getWorkQueue().getWorkRequestList()) {
            HRDeptWorkRequest req = (HRDeptWorkRequest)request;
            if (req.getResult().equalsIgnoreCase("Waiting")) {
                Object[] row = new Object[4];
                row[0] = ((HRDeptWorkRequest) request);
                row[1] = request.getSender();
                row[2] = request.getStatus();
                row[3] = req.getResult();
                model.addRow(row);
            }
        }
    }
    private void populateApprovedRequestTable() {
        DefaultTableModel model = (DefaultTableModel) approvedTable.getModel();

        model.setRowCount(0);

        for (WorkRequest request : userAccount.getWorkQueue().getWorkRequestList()) {
            
            HRDeptWorkRequest req = (HRDeptWorkRequest)request;
            if (req.getResult().equalsIgnoreCase("Approved")) {
                Object[] row = new Object[4];
                row[0] = ((HRDeptWorkRequest) request);
                row[1] = request.getSender();
                row[2] = request.getStatus();
                row[3] = req.getResult();

                model.addRow(row);
            }
        }
    }

    private void populateRejectRequestTable() {
        DefaultTableModel model = (DefaultTableModel) rejectedTable.getModel();

        model.setRowCount(0);

        for (WorkRequest request : userAccount.getWorkQueue().getWorkRequestList()) {
            
            HRDeptWorkRequest req = (HRDeptWorkRequest)request;
            if (req.getResult().equalsIgnoreCase("Rejected")) {
                Object[] row = new Object[4];
                row[0] = ((HRDeptWorkRequest) request);
                row[1] = request.getSender();
                row[2] = request.getStatus();
                row[3] = req.getResult();

                model.addRow(row);
            }
        }
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton2 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        WorkQueueTable = new javax.swing.JTable();
        enterpriseLabel = new javax.swing.JLabel();
        valueLabel = new javax.swing.JLabel();
        refreshTestJButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        rejectedTable = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        approvedTable = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(220, 220), new java.awt.Dimension(220, 220), new java.awt.Dimension(220, 220));
        filler3 = new javax.swing.Box.Filler(new java.awt.Dimension(220, 220), new java.awt.Dimension(220, 220), new java.awt.Dimension(220, 220));
        deleteBtn = new javax.swing.Box.Filler(new java.awt.Dimension(220, 220), new java.awt.Dimension(220, 220), new java.awt.Dimension(220, 220));

        setBackground(new java.awt.Color(255, 255, 255));
        setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 5));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton2.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
        jButton2.setText("SEND TO EVENT PLANNER");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 630, 260, 30));

        jButton1.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
        jButton1.setText("SEND EVENT REQUEST ");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 340, 250, 30));

        WorkQueueTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Event Name", "Sender", "Status", "Result"
            }
        ));
        jScrollPane1.setViewportView(WorkQueueTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 150, 1030, 177));

        enterpriseLabel.setFont(new java.awt.Font("Bahnschrift", 1, 20)); // NOI18N
        enterpriseLabel.setText("ENTERPRISE");
        add(enterpriseLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, -1, 40));

        valueLabel.setFont(new java.awt.Font("Bahnschrift", 1, 20)); // NOI18N
        valueLabel.setText("<value>");
        add(valueLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 30, 200, 20));

        refreshTestJButton.setFont(new java.awt.Font("Bahnschrift", 1, 20)); // NOI18N
        refreshTestJButton.setText("REFRESH");
        refreshTestJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshTestJButtonActionPerformed(evt);
            }
        });
        add(refreshTestJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 50, 133, 42));

        rejectedTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Event Name", "Sender", "Status", "Result"
            }
        ));
        jScrollPane2.setViewportView(rejectedTable);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 720, 1030, 189));

        approvedTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Event Name", "Sender", "Status", "Result"
            }
        ));
        jScrollPane3.setViewportView(approvedTable);

        add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 440, 1030, 180));

        jLabel3.setFont(new java.awt.Font("Bahnschrift", 1, 20)); // NOI18N
        jLabel3.setText("jLabel3");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 60, -1, -1));

        jLabel4.setFont(new java.awt.Font("Bahnschrift", 1, 20)); // NOI18N
        jLabel4.setText("Pending Requests");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 120, -1, -1));

        jLabel5.setFont(new java.awt.Font("Bahnschrift", 1, 20)); // NOI18N
        jLabel5.setText("Approved Requests");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 410, -1, -1));

        jLabel6.setFont(new java.awt.Font("Bahnschrift", 1, 20)); // NOI18N
        jLabel6.setText("Rejected Requests");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 690, -1, -1));

        filler1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        add(filler1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 110, 1060, 280));

        filler3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        add(filler3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 400, 1060, 270));

        deleteBtn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        add(deleteBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 680, 1060, 250));
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        
        int selectedRow = approvedTable.getSelectedRow();
        if (selectedRow < 0) {
            return;
        }
        WorkRequest request = (WorkRequest) approvedTable.getValueAt(selectedRow, 0);
        HRDeptWorkRequest req = (HRDeptWorkRequest)request;
        Organization organ = null;
        Enterprise ent = null;
        for (Network net : business.getNetworkList()) {
            for (Enterprise enterprise : net.getEnterpriseDirectory().getEnterpriseList()) {
                if (enterprise instanceof EventPlannerEnterprise) {
                    ent = enterprise;
                    for (Organization org : ent.getOrganizationDirectory().getOrganizationList()) {
                        if (org instanceof BudgetingDeptOrganization) {
                            organ = org;
                            req.setResult("Waiting");
                            request.setStatus("Sent to Event Planners");
                            organ.getWorkQueue().getWorkRequestList().add(request);
                        }
                    }
                }
            }
        }
        populateRequestTable();
        populateRejectRequestTable();
        populateApprovedRequestTable();
JOptionPane.showMessageDialog(null, "Sent to Event Planners", "Info", JOptionPane.PLAIN_MESSAGE);
        //        if(organ!=null){
            //            for(UserAccount ua: organ.getUserDirectory().getUserAccountList()){
                //                System.out.println("Inside organization loop");
                //                ua.getWorkQueue().getWorkRequestList().add(request);

                //                for(WorkRequest request : ua.getWorkQueue().getWorkRequestList() ){
                    //            System.out.println("####"+request.getStatus());
                    //            }
                //        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        CardLayout card = (CardLayout) userProcessContainer.getLayout();
        userProcessContainer.add("HRFundingRequestPanel", new HRFundingRequestPanel(userProcessContainer, userAccount, enterprise));
        card.next(userProcessContainer);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void refreshTestJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshTestJButtonActionPerformed

        populateRequestTable();
        populateApprovedRequestTable();
        populateRejectRequestTable();
    }//GEN-LAST:event_refreshTestJButtonActionPerformed

  


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable WorkQueueTable;
    private javax.swing.JTable approvedTable;
    private javax.swing.Box.Filler deleteBtn;
    private javax.swing.JLabel enterpriseLabel;
    private javax.swing.Box.Filler filler1;
    private javax.swing.Box.Filler filler3;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JButton refreshTestJButton;
    private javax.swing.JTable rejectedTable;
    private javax.swing.JLabel valueLabel;
    // End of variables declaration//GEN-END:variables




}

