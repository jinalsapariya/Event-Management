/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.EventOrganizingCommitteeRole;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Enterprise.EventPlannerEnterprise;
import Business.Network.Network;
import Business.Organization.BudgetingDeptOrganization;
import Business.Organization.EventOrganizingCommittee;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.EventOrganizingCommitteeWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author jay_c
 */
public class EventOrganizingCommitteeDashPanel extends javax.swing.JPanel {

    /**
     * Creates new form EventOrganizingCommitteeDashPanel
     */
    private JPanel userProcessContainer;
    private Organization organization;
    private Enterprise enterprise;
    private UserAccount userAccount;
    private EcoSystem business;

    public EventOrganizingCommitteeDashPanel(JPanel userProcessContainer, UserAccount account, EventOrganizingCommittee organization, Enterprise enterprise, EcoSystem business) {
        initComponents();

        this.userProcessContainer = userProcessContainer;
        this.organization = organization;
        this.enterprise = enterprise;
        this.userAccount = account;
        this.business = business;
        userProcessContainer.setSize(1920, 1080);
        valueLabel.setText(enterprise.getName());
        jLabel3.setText("Welcome, " + userAccount.getUsername());
        populateRequestTable();
        populateApprovedRequestTable();
        populateRejectedRequestTable();
    }

    public void populateRequestTable() {
        DefaultTableModel model = (DefaultTableModel) WorkQueueTable.getModel();

        model.setRowCount(0);

        for (WorkRequest request : userAccount.getWorkQueue().getWorkRequestList()) {
            EventOrganizingCommitteeWorkRequest req = (EventOrganizingCommitteeWorkRequest) request;
            if (req.getResult().equalsIgnoreCase("Waiting")) {
                Object[] row = new Object[4];
                row[0] = ((EventOrganizingCommitteeWorkRequest) request);
                row[1] = request.getSender();
                row[2] = request.getStatus();
                row[3] = ((EventOrganizingCommitteeWorkRequest) request).getResult();

                model.addRow(row);
            }
        }
    }

    public void populateRejectedRequestTable() {
        DefaultTableModel model = (DefaultTableModel) rejectedTable.getModel();

        model.setRowCount(0);

        for (WorkRequest request : userAccount.getWorkQueue().getWorkRequestList()) {

            EventOrganizingCommitteeWorkRequest req = (EventOrganizingCommitteeWorkRequest) request;
            if (req.getResult().equalsIgnoreCase("Rejected")) {
                Object[] row = new Object[4];
                row[0] = ((EventOrganizingCommitteeWorkRequest) request);
                row[1] = request.getSender();
                row[2] = request.getStatus();
                row[3] = req.getResult();

                model.addRow(row);
            }
        }
    }

    public void populateApprovedRequestTable() {
        DefaultTableModel model = (DefaultTableModel) approvedTable.getModel();

        model.setRowCount(0);

        for (WorkRequest request : userAccount.getWorkQueue().getWorkRequestList()) {

            EventOrganizingCommitteeWorkRequest req = (EventOrganizingCommitteeWorkRequest) request;
            if (req.getResult().equalsIgnoreCase("Approved")) {
                Object[] row = new Object[5];
                row[0] = ((EventOrganizingCommitteeWorkRequest) request);
                row[1] = request.getSender();
                row[2] = request.getStatus();
                row[3] = req.getResult();
                row[4] = req.getAcceptingEnterprise();

                model.addRow(row);
            }
           
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        WorkQueueTable = new javax.swing.JTable();
        enterpriseLabel = new javax.swing.JLabel();
        valueLabel = new javax.swing.JLabel();
        refreshTestJButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        rejectedTable = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        approvedTable = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        enterpriseLabel1 = new javax.swing.JLabel();
        enterpriseLabel2 = new javax.swing.JLabel();
        enterpriseLabel3 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(220, 220), new java.awt.Dimension(220, 220), new java.awt.Dimension(220, 220));
        filler3 = new javax.swing.Box.Filler(new java.awt.Dimension(220, 220), new java.awt.Dimension(220, 220), new java.awt.Dimension(220, 220));
        deleteBtn = new javax.swing.Box.Filler(new java.awt.Dimension(220, 220), new java.awt.Dimension(220, 220), new java.awt.Dimension(220, 220));

        setBackground(new java.awt.Color(255, 255, 255));
        setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 5));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton1.setFont(new java.awt.Font("Bahnschrift", 1, 14)); // NOI18N
        jButton1.setText("SEND EVENT REQUEST ");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 340, 280, -1));

        WorkQueueTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Event Name", "Sender", "Status", "Result"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(WorkQueueTable);
        if (WorkQueueTable.getColumnModel().getColumnCount() > 0) {
            WorkQueueTable.getColumnModel().getColumn(0).setResizable(false);
            WorkQueueTable.getColumnModel().getColumn(1).setResizable(false);
            WorkQueueTable.getColumnModel().getColumn(2).setResizable(false);
            WorkQueueTable.getColumnModel().getColumn(3).setResizable(false);
        }

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 160, 1030, 160));

        enterpriseLabel.setFont(new java.awt.Font("Bahnschrift", 1, 18)); // NOI18N
        enterpriseLabel.setText("Rejected Requests");
        add(enterpriseLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 690, 230, 30));

        valueLabel.setFont(new java.awt.Font("Bahnschrift", 1, 18)); // NOI18N
        valueLabel.setText("<value>");
        add(valueLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 20, 200, 30));

        refreshTestJButton.setFont(new java.awt.Font("Bahnschrift", 1, 14)); // NOI18N
        refreshTestJButton.setText("REFRESH");
        refreshTestJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshTestJButtonActionPerformed(evt);
            }
        });
        add(refreshTestJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(970, 70, -1, -1));

        rejectedTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Event Name", "Sender", "Status", "Result"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(rejectedTable);
        if (rejectedTable.getColumnModel().getColumnCount() > 0) {
            rejectedTable.getColumnModel().getColumn(0).setResizable(false);
            rejectedTable.getColumnModel().getColumn(1).setResizable(false);
            rejectedTable.getColumnModel().getColumn(2).setResizable(false);
            rejectedTable.getColumnModel().getColumn(3).setResizable(false);
        }

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 730, 1020, 160));

        approvedTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Event Name", "Sender", "Status", "Result", "Accepting Enterprise"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(approvedTable);
        if (approvedTable.getColumnModel().getColumnCount() > 0) {
            approvedTable.getColumnModel().getColumn(0).setResizable(false);
            approvedTable.getColumnModel().getColumn(1).setResizable(false);
            approvedTable.getColumnModel().getColumn(2).setResizable(false);
            approvedTable.getColumnModel().getColumn(3).setResizable(false);
            approvedTable.getColumnModel().getColumn(4).setResizable(false);
        }

        add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 440, 1020, 160));

        jButton2.setFont(new java.awt.Font("Bahnschrift", 1, 14)); // NOI18N
        jButton2.setText("SEND TO EVENT PLANNER");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 620, 260, -1));

        enterpriseLabel1.setFont(new java.awt.Font("Bahnschrift", 1, 18)); // NOI18N
        enterpriseLabel1.setText("ENTERPRISE");
        add(enterpriseLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 190, 30));

        enterpriseLabel2.setFont(new java.awt.Font("Bahnschrift", 1, 18)); // NOI18N
        enterpriseLabel2.setText("Pending Requests");
        add(enterpriseLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 120, 230, 30));

        enterpriseLabel3.setFont(new java.awt.Font("Bahnschrift", 1, 18)); // NOI18N
        enterpriseLabel3.setText("Approved Requests");
        add(enterpriseLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 400, 230, 30));

        jLabel3.setFont(new java.awt.Font("Bahnschrift", 1, 20)); // NOI18N
        jLabel3.setText("jLabel3");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 60, -1, -1));

        filler1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        add(filler1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 110, 1060, 270));

        filler3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        add(filler3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 390, 1060, 270));

        deleteBtn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        add(deleteBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 670, 1060, 280));
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        CardLayout card = (CardLayout) userProcessContainer.getLayout();
        userProcessContainer.add("FundingRequestPanel", new FundingRequestPanel(userProcessContainer, userAccount, enterprise));
        card.next(userProcessContainer);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void refreshTestJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshTestJButtonActionPerformed

        populateRequestTable();
        populateApprovedRequestTable();
        populateRejectedRequestTable();

    }//GEN-LAST:event_refreshTestJButtonActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:

        int selectedRow = approvedTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Make a selection.");
            return;
        }
        WorkRequest request = (WorkRequest) approvedTable.getValueAt(selectedRow, 0);

        EventOrganizingCommitteeWorkRequest req = (EventOrganizingCommitteeWorkRequest) request;
        Organization organ = null;
        Enterprise ent = null;
        for (Network net : business.getNetworkList()) {
            for (Enterprise enterprise : net.getEnterpriseDirectory().getEnterpriseList()) {
                if (enterprise instanceof EventPlannerEnterprise) {
                    ent = enterprise;
                    for (Organization org : ent.getOrganizationDirectory().getOrganizationList()) {
                        if (org instanceof BudgetingDeptOrganization) {
                            organ = org;
//                            for ( ua : organ.getUserDirectory().getUserAccountList()) {
//                                System.out.println("Inside organization loop");
//                                ua.getWorkQueue().getWorkRequestList().add(request);

//                            } 
                            req.setStatus("Sent to Event Planners");
                            req.setResult("Waiting");

                            organ.getWorkQueue().getWorkRequestList().add(request);
                        }
                    }
                }
            }
        }
    JOptionPane.showMessageDialog(null, "Sent to Event Planners");
        populateRequestTable();
        populateRejectedRequestTable();
        populateApprovedRequestTable();
        
        
//        if(organ!=null){
//            for(UserAccount ua: organ.getUserDirectory().getUserAccountList()){
//                System.out.println("Inside organization loop");
//                ua.getWorkQueue().getWorkRequestList().add(request);

//                for(WorkRequest request : ua.getWorkQueue().getWorkRequestList() ){
//            System.out.println("####"+request.getStatus());
//            }
//        }
    }//GEN-LAST:event_jButton2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable WorkQueueTable;
    private javax.swing.JTable approvedTable;
    private javax.swing.Box.Filler deleteBtn;
    private javax.swing.JLabel enterpriseLabel;
    private javax.swing.JLabel enterpriseLabel1;
    private javax.swing.JLabel enterpriseLabel2;
    private javax.swing.JLabel enterpriseLabel3;
    private javax.swing.Box.Filler filler1;
    private javax.swing.Box.Filler filler3;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JButton refreshTestJButton;
    private javax.swing.JTable rejectedTable;
    private javax.swing.JLabel valueLabel;
    // End of variables declaration//GEN-END:variables
}
